/*

Auteurs : 
			Enzo GOULESQUE 	 21802561
			Heiarii COLLENOT 22008650
			Mihai POITELEA   21805058
			Margaux RENOIR   21605028
*/



/*
Création des tables du SQUID GAME
*/

prompt "Création des tables du SQUID GAME"

CREATE TABLE FAMILLE (
	ID_FAM NUMERIC(6,0),
	IBAN VARCHAR(30), 
	NOM VARCHAR(50), 
	ADRESSE VARCHAR(50),
	TELEPHONE VARCHAR(20),
	CONSTRAINT PK_FAMILLE PRIMARY KEY (ID_FAM)
);

CREATE TABLE PERSONNE (
	NUMERO  NUMERIC(6,0),  
	NOM VARCHAR(50), 
	PRENOM VARCHAR(20), 
	TELEPHONE VARCHAR(20), 
	ADRESSE VARCHAR(30),
 	SYMBOLE VARCHAR(10),CHECK (SYMBOLE IN ('ROND','CARRE','TRIANGLE')),
 	VIVANT NUMBER(1), CHECK (VIVANT IN (0,1)),
 	ID_FAM NUMERIC(6,0),
 	CONSTRAINT PK_PERSONNE PRIMARY KEY (NUMERO),
 	CONSTRAINT FK_IDFAM FOREIGN KEY (ID_FAM) REFERENCES FAMILLE(ID_FAM)
);

CREATE TABLE AMITIE (
	NUM1 NUMERIC(6,0),
	NUM2 NUMERIC(6,0),
	DATE_DEB DATE NOT NULL,
	DATE_FIN DATE,
	CONSTRAINT PK_AMITIE PRIMARY KEY (NUM1,NUM2),
	CONSTRAINT FK_NUMERO1 FOREIGN KEY (NUM1) REFERENCES PERSONNE(NUMERO),
	CONSTRAINT FK_NUMERO2 FOREIGN KEY (NUM2) REFERENCES PERSONNE(NUMERO)
);

CREATE TABLE JEUX (  
	NOM VARCHAR(25), 
	LIEU VARCHAR(25) NOT NULL, 
 	DUREE NUMERIC(4,0),
 	STATUS VARCHAR(10), CHECK (STATUS IN ('FINI','EN_COURS','A_VENIR')),
 	JEU_PARENT VARCHAR(25),
	CONSTRAINT PK_JEUX PRIMARY KEY (NOM),
	CONSTRAINT FK_NOMPRE FOREIGN KEY (JEU_PARENT) REFERENCES JEUX(NOM)
);

CREATE TABLE JOUE (
	NUM_JOUEUR NUMERIC(4,0), 
	NOM_JEU VARCHAR(25),  
	RESULTAT  VARCHAR(15), CHECK(RESULTAT IN('A_SURVECU', 'MORT')),
	CONSTRAINT PK_JOUE PRIMARY KEY (NUM_JOUEUR,NOM_JEU),
	CONSTRAINT FK_NUMERO_JOUE FOREIGN KEY (NUM_JOUEUR) REFERENCES PERSONNE(NUMERO),
	CONSTRAINT FK_NOM_JEU_JOUE FOREIGN KEY (NOM_JEU) REFERENCES JEUX(NOM)
);

CREATE TABLE SUPERVISE (
	NUM_GARDE NUMERIC(4,0), 
	NOM_JEU VARCHAR(25),
	CONSTRAINT PK_SUPERVISE PRIMARY KEY (NUM_GARDE,NOM_JEU),
	CONSTRAINT FK_NUM_GARDE FOREIGN KEY (NUM_GARDE) REFERENCES PERSONNE(NUMERO),
	CONSTRAINT FK_NOM_JEU_SUPERVISE FOREIGN KEY (NOM_JEU) REFERENCES JEUX(NOM)
);

CREATE TABLE INVESTISSEUR (
	NUM_INV NUMERIC(6,0), 
	PSEUDO VARCHAR(15) NOT NULL, 
	IBAN VARCHAR(30) NOT NULL, 
	MASQUE VARCHAR(20),
	CONSTRAINT PK_INVESTISSEUR PRIMARY KEY (NUM_INV)
);

CREATE TABLE PARI (
	NUM_INV NUMERIC(4,0), 
	NOM_JEU VARCHAR(30),
	NUM_JOUEUR NUMERIC(6,0) NOT NULL,
	SOMME NUMERIC(10,0) NOT NULL,
	CONSTRAINT PK_PARI PRIMARY KEY (NUM_INV,NOM_JEU),
	CONSTRAINT FK_NUM_INV FOREIGN KEY (NUM_INV) REFERENCES INVESTISSEUR(NUM_INV),
	CONSTRAINT FK_NOMJEU_PARI FOREIGN KEY (NOM_JEU) REFERENCES JEUX(NOM),
	CONSTRAINT FK_NUM_JOUEUR_PARI FOREIGN KEY (NUM_JOUEUR) REFERENCES PERSONNE(NUMERO)
);

/* 
TUPLES POUR LES DIFFERENTES RELATIONS.
*/

/*
Pour mettre les dates au format date avec numero jj-mm-aaaa
*/

ALTER session SET NLS_DATE_FORMAT='DD-MM-YYYY' ; 

/* 
Paramètres d'affichage
*/
SET PAGESIZE 30
COLUMN COLUMN_NAME FORMAT A30
SET LINESIZE 300
/*
Effacer les anciennes valeurs des relations
*/

prompt -------------------------------------------;
prompt --- Suppression des anciens tuples --------;
prompt -------------------------------------------;

DELETE FROM FAMILLE; 
DELETE FROM PERSONNE; 
DELETE FROM AMITIE; 
DELETE FROM JEUX; 
DELETE FROM JOUE; 
DELETE FROM SUPERVISE;
DELETE FROM INVESTISSEUR;
DELETE FROM PARI;
/*
Insertion des tuples dans les relations
*/

prompt -------------------------------------------;
prompt --- Insertion des nouveaux tuples ---------;
prompt -------------------------------------------;

prompt ------------------------------------------;
prompt -----      Insertion JEUX     ------------;
prompt ------------------------------------------;

INSERT INTO JEUX VALUES ('RED LIGHT GREEN LIGHT','SALLE 1', 10, 'FINI', NULL  );
INSERT INTO JEUX VALUES ('BISCUIT', 'SALLE 2', 20, 'FINI', 'RED LIGHT GREEN LIGHT' );
INSERT INTO JEUX VALUES ('EPREUVE A LA CORDE', 'SALLE 3', 15 , 'EN_COURS', 'BISCUIT');
INSERT INTO JEUX VALUES ('BILLES', 'SALLE 4', 15, 'A_VENIR', 'EPREUVE A LA CORDE');
INSERT INTO JEUX VALUES ('TREMPLIN DE VERRE', 'SALLE 4', 15,'A_VENIR', 'BILLES');
INSERT INTO JEUX VALUES ('SQUID GAME', 'SALLE 1',15,'A_VENIR', 'TREMPLIN DE VERRE');


prompt ------------------------------------------;
prompt -----    Insertion INVESTISSEUR   --------;
prompt ------------------------------------------;

INSERT INTO INVESTISSEUR VALUES (000001,'MICHEL', 'FR111647896524698761345678','TIGRE' );
INSERT INTO INVESTISSEUR VALUES (000002,'PAUL', 'FR111234613579431654895132','LOUP' );
INSERT INTO INVESTISSEUR VALUES (000003,'PIERRE', 'FR119875653418685432468465','OURS' );
INSERT INTO INVESTISSEUR VALUES (000004,'NATACHA', 'FR115411531135354646545345','PANTHERE' );
INSERT INTO INVESTISSEUR VALUES (000005,'MARGAUX', 'FR116768453131518656546455','AIGLE' );


prompt ------------------------------------------;
prompt -----     Insertion FAMILLE    -----------;
prompt ------------------------------------------;

INSERT INTO FAMILLE VALUES (000001,'FR111648514524698761345678','RENOIR','113 avenue de Provence',33688521515); 
INSERT INTO FAMILLE VALUES (000002,'FR225745875577426395515512','GOULESQUE','101 Chemin Des Bateliers',33684524871); 
INSERT INTO FAMILLE VALUES (000003,'FR369715949821564858495685','COLLENOT','48 cours Jean Jaures',33698254147);
INSERT INTO FAMILLE VALUES (000004,'FR521478522486324562486588','POITELEA','113 avenue de Provence',33699852856); 
INSERT INTO FAMILLE VALUES (000005,'FR212258993487426695623598','PARIENTI','129 place Stanislas',33685241520);
INSERT INTO FAMILLE VALUES (000006,'FR225874152369875123688226','LANDERS','63 rue des Lacs',33652418130);  
INSERT INTO FAMILLE VALUES (000007,'FR229875236987422369841235','ROSAIN','99 Rue de la Pompe',33648257412); 
INSERT INTO FAMILLE VALUES (000008,'FR589822477423669874411336','RENARD','92 rue du Clair Bocage',33689521485); 
INSERT INTO FAMILLE VALUES (000009,'FR977132155974522115588744','BENTEAU','130 rue de la Boétie',33658745278); 
INSERT INTO FAMILLE VALUES (000010,'FR154674894561548648456534','LECLERC','125 rue Bonneterie',33652459874); 
INSERT INTO FAMILLE VALUES (000011,'FR156478394156148674863461','PUCCIO','55 rue Porte Orange',33695214214); 
INSERT INTO FAMILLE VALUES (000012,'FR151849489748648787896478','RUIZ','37 rue Marie de Médicis',3369635874);
INSERT INTO FAMILLE VALUES (000013,'FR458748946548946541897486','ONGARO','80 boulevard de Prague',33698258744); 
INSERT INTO FAMILLE VALUES (000014,'FR156489453148645641864564','LANSALOT','79 boulevard Aristide Briand',33692579614); 
INSERT INTO FAMILLE VALUES (000015,'FR123514876548748648978654','ETTAHIRI','87 rue des Lacs',33690325874); 
INSERT INTO FAMILLE VALUES (000016,'FR231878945641532156874864','MOUMARD','67 boulevard Bryas',33616324214); 
INSERT INTO FAMILLE VALUES (000017,'FR123156878976541534867485','BOCANCA','69 rue des Soeurs',33698024574); 
INSERT INTO FAMILLE VALUES (000018,'FR489745645648974654515648','BERTEHET','121 rue La Boétie',33695632874); 
INSERT INTO FAMILLE VALUES (000019,'FR156498745613215684783975','HUFTIER','50 rue des lieutemants Thomazo',33698532358);


prompt ------------------------------------------;
prompt -----     Insertion PERSONNE    ----------;
prompt ------------------------------------------;

INSERT INTO PERSONNE VALUES (000001,'RENOIR','Margaux',33695357515,'113 avenue de Provence',NULL,1,000001); 
INSERT INTO PERSONNE VALUES (000002,'GOULESQUE','Enzo',33684153720,'43 rue Grande Fusterie',NULL,1,000002); 
INSERT INTO PERSONNE VALUES (000003,'COLLENOT','Heiarii',33698523647,'48 cours Jean Jaures',NULL,1,000003);
INSERT INTO PERSONNE VALUES (000004,'POITELEA','Mihai',33698524156,'113 avenue de Provence',NULL,1,000004); 
INSERT INTO PERSONNE VALUES (000005,'PARIENTI','Charlotte',33698524152,'129 place Stanislas',NULL,1,000005); 
INSERT INTO PERSONNE VALUES (000006,'LANDERS','Elise',33698524130,'63 rue des Lacs',NULL,1,000006); 
INSERT INTO PERSONNE VALUES (000007,'GOULESQUE','Sara',33698523684,'43 rue Grande Fusterie',NULL,1,000002); 
INSERT INTO PERSONNE VALUES (000008,'ROSAIN','Joanne',33648741552,'99 Rue de la Pompe',NULL,0,000007); 
INSERT INTO PERSONNE VALUES (000009,'RENARD','Louis',33655221485,'92 rue du Clair Bocage',NULL,1,000008); 
INSERT INTO PERSONNE VALUES (000010,'BENTEAU','Claire',33654125478,'130 rue de la Boétie',NULL,1,000009); 
INSERT INTO PERSONNE VALUES (000011,'LECLERC','Arthur',33652418754,'125 rue Bonneterie',NULL,0,000010); 
INSERT INTO PERSONNE VALUES (000012,'PUCCIO','Lorenzo',33698740214,'55 rue Porte Orange',NULL,0,000011); 
INSERT INTO PERSONNE VALUES (000013,'RUIZ','Nico',3369620114,'37 rue Marie de Médicis',NULL,0,000012);
INSERT INTO PERSONNE VALUES (000014,'ONGARO','Oceance',33698740854,'80 boulevard de Prague',NULL,0,000013); 
INSERT INTO PERSONNE VALUES (000015,'LANSALOT','Clara',33699741214,'79 boulevard Aristide Briand',NULL,1,000014); 
INSERT INTO PERSONNE VALUES (000016,'ETTAHIRI','Sofian',33690051214,'87 rue des Lacs',NULL,1,000015); 
INSERT INTO PERSONNE VALUES (000017,'MOUMARD','Corentin',33615740214,'67 boulevard Bryas',NULL,1,000016) ; 
INSERT INTO PERSONNE VALUES (000018,'BOCANCA','Robin',33698504114,'69 rue des Soeurs',NULL,0,000017); 
INSERT INTO PERSONNE VALUES (000019,'BERTEHET','Cedric',33698749874,'121 rue La Boétie',NULL,1,000018); 
INSERT INTO PERSONNE VALUES (000020,'HUFTIER','Benoit',33657412358,'50 rue des lieutemants Thomazo',NULL,0,0000019);
INSERT INTO PERSONNE VALUES (000021,'CHAUVERE','Jean',33651478854,'79 rue Léon Dierx','ROND',NULL,NULL); 
INSERT INTO PERSONNE VALUES (000022,'LEVEQUE','Isaak',33654112047,'116 rue Reine Elisabeth','TRIANGLE',NULL,NULL);
INSERT INTO PERSONNE VALUES (000023,'PEGNER','Tilda',33658744125,'21 rue du Faubourg National','ROND',NULL,NULL) ; 
INSERT INTO PERSONNE VALUES (000024,'BARASSAC','Giuseppe',33688745632,'47 rue de la République','ROND',NULL,NULL); 
INSERT INTO PERSONNE VALUES (000025,'AGUEFORT','Marie',33654789541,'55 place Stanislas','CARRE',NULL,NULL); 
INSERT INTO PERSONNE VALUES (000026,'NOSSEAU','Oscar',33687451128,'52 Chemin des Bateliers','ROND',NULL,NULL) ; 
INSERT INTO PERSONNE VALUES (000027,'CARDAILLOT','Isaak',33698873684,'53 rue Bonneterie','ROND',NULL,NULL); 
INSERT INTO PERSONNE VALUES (000028,'ECHELET','Angelina',33698743684,'119 Chemin Du Lavarin Sud','ROND',NULL,NULL); 
INSERT INTO PERSONNE VALUES (000029,'ASTRARRAL','Nina',33699874684,'111 rue Saint Germain','ROND',NULL,NULL); 
INSERT INTO PERSONNE VALUES (000030,'SUGRE','Morgane',33602143684,'51 rue du Clair Bocage','TRIANGLE',NULL,NULL); 


prompt ------------------------------------------;
prompt -----     Insertion AMITIE    ------------;
prompt ------------------------------------------;

INSERT INTO AMITIE VALUES (000001,000005,'10-09-2020',NULL);
INSERT INTO AMITIE VALUES (000001,000004,'01-08-2018',NULL);
INSERT INTO AMITIE VALUES (000001,0000016,'15-10-2020',NULL);
INSERT INTO AMITIE VALUES (000002,000020,'20-01-2012',NULL);
INSERT INTO AMITIE VALUES (000002,000003,'31-12-2013',NULL);
INSERT INTO AMITIE VALUES (000004,000011,'05-05-2019',NULL);
INSERT INTO AMITIE VALUES (000011,000012,'07-07-2000',NULL);
INSERT INTO AMITIE VALUES (000015,000016,'11-03-2015',NULL);
INSERT INTO AMITIE VALUES (000017,000018,'19-05-2019',NULL);
INSERT INTO AMITIE VALUES (000013,000014,'22-09-2020',NULL);


prompt ------------------------------------------;
prompt -----     Insertion JOUE      ------------;
prompt ------------------------------------------;

INSERT INTO JOUE VALUES (000001,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000002,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000003,'RED LIGHT GREEN LIGHT','A_SURVECU');
INSERT INTO JOUE VALUES (000004,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000005,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000006,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000007,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000008,'RED LIGHT GREEN LIGHT','MORT'); 
INSERT INTO JOUE VALUES (000009,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000010,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000011,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000012,'RED LIGHT GREEN LIGHT','MORT'); 
INSERT INTO JOUE VALUES (000013,'RED LIGHT GREEN LIGHT','A_SURVECU');
INSERT INTO JOUE VALUES (000014,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000015,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000016,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000017,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000018,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000019,'RED LIGHT GREEN LIGHT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000020,'RED LIGHT GREEN LIGHT','MORT');

INSERT INTO JOUE VALUES (000001,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000002,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000003,'BISCUIT','A_SURVECU');
INSERT INTO JOUE VALUES (000004,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000005,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000006,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000007,'BISCUIT','A_SURVECU');  
INSERT INTO JOUE VALUES (000009,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000010,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000011,'BISCUIT','MORT'); 
INSERT INTO JOUE VALUES (000013,'BISCUIT','MORT');
INSERT INTO JOUE VALUES (000014,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000015,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000016,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000017,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000018,'BISCUIT','A_SURVECU'); 
INSERT INTO JOUE VALUES (000019,'BISCUIT','A_SURVECU'); 

INSERT INTO JOUE VALUES (000001,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000002,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000003,'EPREUVE A LA CORDE',NULL);
INSERT INTO JOUE VALUES (000004,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000005,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000006,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000007,'EPREUVE A LA CORDE',NULL);  
INSERT INTO JOUE VALUES (000009,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000010,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000014,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000015,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000016,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000017,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000018,'EPREUVE A LA CORDE',NULL); 
INSERT INTO JOUE VALUES (000019,'EPREUVE A LA CORDE',NULL); 

prompt ------------------------------------------;
prompt -----     Insertion SUPERVISE    ---------;
prompt ------------------------------------------;

INSERT INTO SUPERVISE VALUES (000021,'RED LIGHT GREEN LIGHT');
INSERT INTO SUPERVISE VALUES (000024,'RED LIGHT GREEN LIGHT');
INSERT INTO SUPERVISE VALUES (000028,'RED LIGHT GREEN LIGHT');
INSERT INTO SUPERVISE VALUES (000030,'RED LIGHT GREEN LIGHT');

INSERT INTO SUPERVISE VALUES (000022,'BISCUIT');
INSERT INTO SUPERVISE VALUES (000026,'BISCUIT');
INSERT INTO SUPERVISE VALUES (000027,'BISCUIT');
INSERT INTO SUPERVISE VALUES (000030,'BISCUIT');

INSERT INTO SUPERVISE VALUES (000021,'EPREUVE A LA CORDE');
INSERT INTO SUPERVISE VALUES (000025,'EPREUVE A LA CORDE');
INSERT INTO SUPERVISE VALUES (000029,'EPREUVE A LA CORDE');

prompt ------------------------------------------;
prompt -------     Insertion PARI    ------------;
prompt ------------------------------------------;

INSERT INTO PARI VALUES (000001, 'RED LIGHT GREEN LIGHT', 000001, 100000 );
INSERT INTO PARI VALUES (000002, 'RED LIGHT GREEN LIGHT', 000016, 150000 );
INSERT INTO PARI VALUES (000003, 'RED LIGHT GREEN LIGHT', 000015, 05000 );
INSERT INTO PARI VALUES (000004, 'RED LIGHT GREEN LIGHT', 000005, 18000 );
INSERT INTO PARI VALUES (000005, 'RED LIGHT GREEN LIGHT', 000018, 50500 );
INSERT INTO PARI VALUES (000001, 'BISCUIT', 000011, 30000 );
INSERT INTO PARI VALUES (000002, 'BISCUIT', 000001, 200000 );
INSERT INTO PARI VALUES (000003, 'BISCUIT', 000018, 10500 );
INSERT INTO PARI VALUES (000004, 'BISCUIT', 000018, 40500 );
INSERT INTO PARI VALUES (000005, 'BISCUIT', 000017, 125000 );
INSERT INTO PARI VALUES (000001, 'EPREUVE A LA CORDE', 000002, 120000 );


---------------------------------------------------
---------------------------------------------------
---------------------------------------------------


-- FONCTION RENVOYANT LE NOMBRE D'AMIS VIVANTS D'UN CERTAIN JOUEUR (numero est un PARAMETRE)

prompt ------------------------------------------;
prompt ---  Création FONCTION nbrAmisVivants ----;
prompt ------------------------------------------;

CREATE OR REPLACE FUNCTION nbrAmisVivants(num_joueur PERSONNE.NUMERO%TYPE)
RETURN NUMERIC IS


	-- variables locales et exceptions

	joueur_mort_exception EXCEPTION;
	nbr_amis NUMERIC(3, 0);
	est_vivant NUMBER(1);

BEGIN
	
	DBMS_OUTPUT.ENABLE();

	-- pour verifier si le joueur existe 
	-- renvoie une exception NO_DATA_FOUND si joueur inexistant
	SELECT vivant INTO est_vivant
	FROM PERSONNE WHERE PERSONNE.NUMERO = num_joueur;  

--on verifie si il est vivant, sinon on renvoie une exception

	IF est_vivant = 0 
		THEN RAISE joueur_mort_exception;
	END IF;

	SELECT COUNT(*) INTO nbr_amis
	FROM PERSONNE
	JOIN AMITIE ON PERSONNE.NUMERO = AMITIE.NUM1
	WHERE NUMERO = num_joueur 
	AND DATE_FIN IS NULL 
	AND AMITIE.NUM2 IN (SELECT NUMERO FROM PERSONNE WHERE VIVANT = 1);

	RETURN nbr_amis;

EXCEPTION
	
	WHEN NO_DATA_FOUND THEN 
		RAISE_APPLICATION_ERROR(-20010, 'ERREUR NBR_AMIS_VIVANTS: Le joueur ' || num_joueur || ' n''existe pas!');
	WHEN joueur_mort_exception THEN
		RAISE_APPLICATION_ERROR(-20011, 'ERREUR NBR_AMIS_VIVANTS: Le joueur ' || num_joueur || ' est mort, il n''a donc plus d''amis...');

END;
/
 

---------------------------------------------------
---------------------------------------------------
---------------------------------------------------


-- Procedure permettant de creer un pari en verifiant l'integrite des données et le respect des contraintes
-- (num_investisseur_P, num_joueur_P, nom_jeu_P, somme_P sont des PARAMETRE)

prompt ------------------------------------------;
prompt ---  Création PROCEDURE emettrePari  -----;
prompt ------------------------------------------;

CREATE OR REPLACE PROCEDURE emettrePari
	(num_investisseur_P IN INVESTISSEUR.NUM_INV%TYPE,
	num_joueur_P IN PERSONNE.NUMERO%TYPE,
	nom_jeu_P IN JEUX.NOM%TYPE,
	somme_P IN PARI.SOMME%TYPE) IS
	

	-- variables locales et exceptions
	
	investisseur_inexistant_exception EXCEPTION;
	joueur_inexistant_exception EXCEPTION;
	jeu_inexistant_exception EXCEPTION;

	joueur_mort_exception EXCEPTION;
	jeu_indisponible_exception EXCEPTION;

	somme_incorrect EXCEPTION;
	pari_deja_existant EXCEPTION;

	num_investisseur_liste INVESTISSEUR.NUM_INV%TYPE;
	num_investisseur_pari PARI.NUM_INV%TYPE;

	existe_joueur NUMERIC(1, 0);
	etat_joueur PERSONNE.VIVANT%TYPE;
	nom_jeu JEUX.NOM%TYPE;


BEGIN

	DBMS_OUTPUT.ENABLE();

-- TEST qu'on selectionne un investisseur qui existe ---------------------------------------

	SELECT COUNT(*) INTO num_investisseur_liste FROM INVESTISSEUR
	WHERE NUM_INV = num_investisseur_P;

	IF num_investisseur_liste = 0 

		THEN RAISE investisseur_inexistant_exception;
	END IF;


-- TEST qu'on selectionne une personne qui existe ET qui n'est pas un garde ET qui vivante

	SELECT COUNT(*) INTO existe_joueur FROM PERSONNE
	WHERE NUMERO = num_joueur_P AND SYMBOLE IS NULL;

	IF existe_joueur = 0 

		THEN RAISE joueur_inexistant_exception;
	END IF;


	SELECT VIVANT INTO etat_joueur FROM PERSONNE
	WHERE NUMERO = num_joueur_P AND SYMBOLE IS NULL;

	IF etat_joueur = 0

		THEN RAISE joueur_mort_exception;		
	END IF;



-- TEST qu'on selectionne un jeu qui existe et qui est disponible -------------------------

	SELECT COUNT(*) INTO nom_jeu FROM JEUX
	WHERE NOM = nom_jeu_P;

	IF nom_jeu = 0 

		THEN RAISE jeu_inexistant_exception;
	END IF;

	
	SELECT STATUS INTO nom_jeu FROM JEUX
	WHERE NOM = nom_jeu_P;

	IF nom_jeu = 'FINI' OR nom_jeu = 'A_VENIR'

		THEN RAISE jeu_indisponible_exception;		
	END IF;



-- TEST qu'on a une somme correcte --------------------------------------------------------
	
	IF somme_P IS NULL OR somme_P <= 0

		THEN RAISE somme_incorrect;
	END IF;
	
	
-- TEST si l'investisseur selectionné a deja parié pour le jeu ----------------------------

	SELECT COUNT(*) INTO num_investisseur_pari FROM PARI
	WHERE NUM_INV = num_investisseur_P AND NOM_JEU = nom_jeu_P;


	IF num_investisseur_pari > 0
	
		THEN RAISE pari_deja_existant;
	END IF;

	
-- SI tout est bon, on insert les valeurs dans la table PARI

	
	INSERT INTO PARI VALUES(num_investisseur_P, nom_jeu_P, num_joueur_P, somme_P);

EXCEPTION


	WHEN investisseur_inexistant_exception THEN RAISE_APPLICATION_ERROR(-20013, 'ERREUR EMETTRE_PARI: L''investisseur specifie n''existe pas!');
	WHEN joueur_inexistant_exception THEN RAISE_APPLICATION_ERROR(-20014, 'ERREUR EMETTRE_PARI: Le joueur specifie n''existe pas!');
	WHEN jeu_inexistant_exception THEN RAISE_APPLICATION_ERROR(-20015, 'ERREUR EMETTRE_PARI: Le jeu specifie n''existe pas!');

	WHEN joueur_mort_exception THEN RAISE_APPLICATION_ERROR(-20016, 'ERREUR EMETTRE_PARI: Le joueur ' || num_joueur_P || 'est mort, impossible de parier sur lui...');
	WHEN jeu_indisponible_exception THEN RAISE_APPLICATION_ERROR(-20017, 'ERREUR EMETTRE_PARI: Le jeu n''est pas disponible! (fini ou a venir)');
	
	WHEN somme_incorrect THEN RAISE_APPLICATION_ERROR(-20018, 'ERREUR EMETTRE_PARI: La somme specifiee n''est pas valide!');
	WHEN pari_deja_existant THEN RAISE_APPLICATION_ERROR(-20019, 'ERREUR EMETTRE_PARI: L''investisseur specifie a deja effectue un pari pour ce jeu!');

END;
/


---------------------------------------------------
---------------------------------------------------
---------------------------------------------------


-- Trigger qui vérifie si un joueur est vivant avant de le renter dans la table Joue
-- Si il est mort, change dans l'attribut vivant à MORT


prompt ------------------------------------------;
prompt -----    Création TRIGGER_MORT   ---------;
prompt ------------------------------------------;

CREATE OR REPLACE TRIGGER TRIGG_MORT
BEFORE INSERT OR UPDATE ON JOUE
FOR EACH ROW
DECLARE
	MESSAGE EXCEPTION;
	numeroJ PERSONNE.NUMERO%type;
	estVivant PERSONNE.VIVANT%type;
BEGIN
	SELECT VIVANT INTO estVivant FROM PERSONNE WHERE NUMERO = :new.NUM_JOUEUR;
	IF estVivant = 0 
		THEN RAISE MESSAGE;
	END IF;
	
	SELECT NUMERO INTO numeroJ FROM PERSONNE WHERE NUMERO = :new.NUM_JOUEUR;
		IF (:new.RESULTAT = 'MORT') THEN 
			UPDATE PERSONNE
			SET VIVANT = 0
			WHERE PERSONNE.NUMERO = numeroJ;
		END IF;

EXCEPTION
	WHEN MESSAGE THEN RAISE_APPLICATION_ERROR(-20001,'Un personnage mort ne peut pas jouer');

END;
/


---------------------------------------------------
---------------------------------------------------
---------------------------------------------------


prompt ------------------------------------------;
prompt ----    Création TRIGG_JOUEUR_GARDE   ----;
prompt ------------------------------------------;


CREATE OR REPLACE TRIGGER TRIGG_JOUEUR_GARDE
BEFORE INSERT OR UPDATE ON PERSONNE
FOR EACH ROW
DECLARE
	MESSAGE1 EXCEPTION;
	MESSAGE2 EXCEPTION;

BEGIN
	IF :new.SYMBOLE IS NOT NULL AND (:new.VIVANT IS NOT NULL OR :new.ID_FAM IS NOT NULL)
		THEN RAISE MESSAGE1;
	END IF;
	IF :new.SYMBOLE IS NULL AND (:new.VIVANT IS NULL OR :new.ID_FAM IS NULL)
		THEN RAISE MESSAGE2;
	END IF;

EXCEPTION
	WHEN MESSAGE1 THEN RAISE_APPLICATION_ERROR(-20000,'Un personnage ne peut pas etre un Joueur et un Garde');
	WHEN MESSAGE2 THEN RAISE_APPLICATION_ERROR(-20002,'Un personnage doit etre un Joueur ou un Garde');

END;
/
